#pragma once

#include <memory>

namespace luanics {
namespace logging {

class Record;

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///
/// @class Sink
///
/// @brief Back-end of logging framework.
///
/// Consumes logging::Record handed off from Source.
///
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class Sink {
public:
	virtual void consume(std::unique_ptr<Record> record) = 0;

	virtual ~Sink() {}
}; // class Sink

}  // namespace logging
}  // namespace luanics
